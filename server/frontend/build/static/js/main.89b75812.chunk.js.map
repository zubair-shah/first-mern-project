{"version":3,"sources":["signup/Form.jsx","login/Form.jsx","404.jsx","firebase.js","todo/todoApp.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["onSubmitFunction","values","console","log","baseURL","window","location","hostname","split","axios","post","email","password","then","res","alert","catch","err","validationSchema","yup","required","min","max","name","Signup","formik","useFormik","initialValues","phone","onSubmit","className","handleSubmit","id","TextField","fullWidth","color","label","variant","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","to","onClick","url","LoginForm","Nonpath","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","userCol","collection","Todo","todo","index","completeTodo","removeTodo","style","textDecoration","isCompleted","text","Button","TodoForm","addTodo","React","useState","setValue","e","preventDefault","target","MainTodo","todos","setTodos","useEffect","a","getDocs","querySnapshot","forEach","doc","data","push","getData","newTodos","splice","map","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UAcA,SAASA,EAAiBC,GACtBC,QAAQC,IAAI,WAAYF,GACxB,IACMG,EAAqD,cAA3CC,OAAOC,SAASC,SAASC,MAAM,KAAK,GADxC,wBACmE,GAC3EC,IAAMC,KAAN,UAAcN,EAAd,iBAAqC,CACnCO,MAAMV,EAAOU,MACbC,SAASX,EAAOW,WAEfC,MAAK,SAAAC,GACRC,MAAM,aAEPC,OAAM,SAAAC,GACLF,MAAM,YAIZ,IAAMG,EAAmBC,IAAW,CAClCR,MAAOQ,IACG,oBACPR,MAAM,uBACNS,SAAS,qBACZR,SAAUO,IACA,uBACPE,IAAI,EAAG,qDACPC,IAAI,GAAI,mBACRF,SAAS,wBAKVG,KAAMJ,IACE,yBAEPC,SAAS,2BA6FDI,MA1Ff,WAGI,IAAMC,EAASC,YAAU,CACrBR,iBAAmBA,EACnBS,cAAc,CACVJ,KAAM,GACNZ,MAAM,GACNiB,MAAM,GACNhB,SAAS,IAGbiB,SAAU7B,IAEd,OACI,gCACI,oBAAI8B,UAAU,cAAd,kCAIR,qBAAKA,UAAU,yCAAf,SACQ,sBAAKA,UAAU,OAAf,UACJ,qBAAKA,UAAU,cAAf,SACE,iCAAQ,kDAEV,cAAC,IAAD,UACA,uBAAMD,SAAUJ,EAAOM,aAAcC,GAAG,YAAYF,UAAU,sBAA9D,UAER,cAACG,EAAA,EAAD,CACYC,WAAS,EACTC,MAAM,UACNH,GAAG,iBACHI,MAAM,YACNC,QAAQ,WACRd,KAAK,OACLe,MAAOb,EAAOxB,OAAOsB,KACrBgB,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQnB,MAAQoB,QAAQlB,EAAOmB,OAAOrB,MACpDsB,WAAYpB,EAAOiB,QAAQnB,MAAQE,EAAOmB,OAAOrB,OAK7D,cAACU,EAAA,EAAD,CACYC,WAAS,EAETF,GAAG,iBACHI,MAAM,QACNC,QAAQ,WACRd,KAAK,QACLe,MAAOb,EAAOxB,OAAOU,MACrB4B,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQ/B,OAASgC,QAAQlB,EAAOmB,OAAOjC,OACrDkC,WAAYpB,EAAOiB,QAAQ/B,OAASc,EAAOmB,OAAOjC,QAG9D,cAACsB,EAAA,EAAD,CACWC,WAAS,EACTF,GAAG,iBACHI,MAAM,QACNC,QAAQ,WACRd,KAAK,UAEN,cAACU,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,UACNH,GAAG,iBACHI,MAAM,WACNC,QAAQ,WACRS,KAAK,WACLvB,KAAK,WACLe,MAAOb,EAAOxB,OAAOW,SACrB2B,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQ9B,UAAY+B,QAAQlB,EAAOmB,OAAOhC,UACxDiC,WAAYpB,EAAOiB,QAAQ9B,UAAYa,EAAOmB,OAAOhC,WAGnD,mCAAQ,cAAC,IAAD,CAAMmC,GAAG,IAAT,SAAa,wBAAQjB,UAAU,kBAAlB,wBACvB,wBAAQgB,KAAK,SAASE,QAAShD,EAAmB8B,UAAU,oBAA5D,sC,OClHZ,SAAS9B,EAAiBC,GACtBC,QAAQC,IAAI,WAAYF,GAG1B,IAAMiB,EAAmBC,IAAW,CAClCR,MAAOQ,IACG,oBACPR,MAAM,uBACNS,SAAS,qBACZR,SAAUO,IACA,uBACPE,IAAI,EAAG,qDACPC,IAAI,GAAI,mBACRF,SAAS,wBAKVG,KAAMJ,IACE,yBACP8B,IAAI,2BACJ7B,SAAS,2BA4ED8B,MAxEf,WAGI,IAAMzB,EAASC,YAAU,CACrBR,iBAAmBA,EACnBS,cAAc,CACVJ,KAAM,GACNZ,MAAM,GACNiB,MAAM,GACNhB,SAAS,IAGbiB,SAAU7B,IAEd,OACI,gCACI,oBAAI8B,UAAU,cAAd,kCAIR,qBAAKA,UAAU,yCAAf,SACQ,sBAAKA,UAAU,OAAf,UACJ,qBAAKA,UAAU,cAAf,SACE,iCAAQ,gDAEV,cAAC,IAAD,UACA,uBAAMD,SAAUJ,EAAOM,aAAcC,GAAG,YAAYF,UAAU,sBAA9D,UAKR,cAACG,EAAA,EAAD,CACYC,WAAS,EAETF,GAAG,iBACHI,MAAM,QACNC,QAAQ,WACRd,KAAK,QACLe,MAAOb,EAAOxB,OAAOU,MACrB4B,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQ/B,OAASgC,QAAQlB,EAAOmB,OAAOjC,OACrDkC,WAAYpB,EAAOiB,QAAQ/B,OAASc,EAAOmB,OAAOjC,QAIpD,cAACsB,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,UACNH,GAAG,iBACHI,MAAM,WACNC,QAAQ,WACRS,KAAK,WACLvB,KAAK,WACLe,MAAOb,EAAOxB,OAAOW,SACrB2B,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQ9B,UAAY+B,QAAQlB,EAAOmB,OAAOhC,UACxDiC,WAAYpB,EAAOiB,QAAQ9B,UAAYa,EAAOmB,OAAOhC,WAGnD,mCAAQ,wBAAQkC,KAAK,SAAShB,UAAU,kBAAhC,mBACR,eAAC,IAAD,CAAMiB,GAAG,UAAT,cAAoB,wBAAQjB,UAAU,oBAAlB,0CCjGnB,SAASqB,IACpB,OACI,8BACI,6C,8ECUXC,YAXsB,CACrBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKT,IAAMC,EAAKC,cCTbC,EAAUC,YAAWH,EAAI,QAG/B,SAASI,EAAT,GAA0D,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,WACvC,OACE,sBACEtC,UAAU,OACVuC,MAAO,CAAEC,eAAgBL,EAAKM,YAAc,eAAiB,IAF/D,UAIGN,EAAKO,KACN,gCACE,cAACC,EAAA,EAAD,CAAQpC,QAAQ,UAAUW,QAAS,kBAAMmB,EAAaD,IAAtD,sBACA,cAACO,EAAA,EAAD,CAAQzB,QAAS,kBAAMoB,EAAWF,IAAQ7B,QAAQ,YAAaF,MAAM,QAArE,yBASV,SAASuC,EAAT,GAAgC,IAAZC,EAAW,EAAXA,QAAW,EACDC,IAAMC,SAAS,IADd,mBACpBvC,EADoB,KACbwC,EADa,KAU3B,OACE,sBAAMjD,SARa,SAAAkD,GACnBA,EAAEC,iBACG1C,IACLqC,EAAQrC,GACRwC,EAAS,MAIT,SACQ,cAAC7C,EAAA,EAAD,CACFC,WAAS,EACTyC,QAASA,EACTxC,MAAM,UACNH,GAAG,iBAAiBI,MAAM,WAAWC,QAAQ,WAC7CS,KAAK,OACLvB,KAAK,OACLO,UAAU,QACVQ,MAAOA,EACTC,SAAU,SAAAwC,GAAC,OAAID,EAASC,EAAEE,OAAO3C,YAxC3CpC,QAAQC,IAAI2D,GAoHGoB,MAtEf,WAAqB,IAAD,EACUN,IAAMC,SAAS,CACrC,CACEL,KAAM,oBACND,aAAa,GAEf,CACEC,KAAM,wBACND,aAAa,GAEf,CACEC,KAAM,6BACND,aAAa,KAZH,mBACTY,EADS,KACFC,EADE,KAedC,qBAAU,WAWN,OAVa,uCAAG,8BAAAC,EAAA,sEACgBC,YAAQzB,GADxB,OACN0B,EADM,OAERvB,EAAO,GACXuB,EAAcC,SAAQ,SAACC,GACnBxF,QAAQC,IAAR,UAAeuF,EAAI1D,GAAnB,eAA4B0D,EAAIC,SAChC1B,EAAK2B,KAAKF,EAAIC,WAElBP,EAASnB,GAPG,2CAAH,oDASb4B,GACO,WACJ3F,QAAQC,IAAI,cAEhB,IACP,IAMMgE,EAAe,SAAAD,GACnB,IAAM4B,EAAQ,YAAOX,GACrBW,EAAS5B,GAAOK,aAAc,EAC9Ba,EAASU,IAEL1B,EAAa,SAAAF,GACjB,IAAM4B,EAAQ,YAAOX,GACrBW,EAASC,OAAO7B,EAAO,GACvBkB,EAASU,IAGX,OACE,qBAAKhE,UAAU,MAAf,SACE,sBAAKA,UAAU,OAAf,UACD,qBAAKA,UAAU,OAAf,SACD,mDAGKqD,EAAMa,KAAI,SAAC/B,EAAMC,GAAP,OACT,cAACF,EAAD,CAEEE,MAAOA,EACPD,KAAMA,EACNE,aAAcA,EACdC,WAAYA,GAJPF,MAOT,cAACQ,EAAD,CAAUC,QAjCA,SAAAH,GACd,IAAMsB,EAAQ,sBAAOX,GAAP,CAAc,CAAEX,UAC9BY,EAASU,Y,QC3CEG,MA3Bf,WACE,OAEE,8BACA,cAAC,IAAD,UACE,eAAC,IAAD,WACA,cAAC,IAAD,CAAQC,KAAK,QAAb,SACE,cAAC,EAAD,MAEA,cAAC,IAAD,CAAQA,KAAK,UAAb,SACA,cAAC,EAAD,MAEA,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,IAAlB,SACA,cAAC,EAAD,MAEA,cAAC,IAAD,CAAQE,UAAW,IAAnB,SACA,cAACjD,EAAD,cCrBOkD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1F,MAAK,YAAkD,IAA/C2F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.89b75812.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\r\nimport { Formik, Field, Form, useFormik } from \"formik\";\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport * as yup from 'yup';\r\nimport './Form.css'\r\nimport axios from 'axios';\r\nimport { BrowserRouter  as\r\n  Router,\r\n  Route,\r\n  Switch,\r\n  Link \r\n} from 'react-router-dom';\r\n\r\nfunction onSubmitFunction(values) {\r\n    console.log(\"values: \", values)\r\n    const dev = \"http://localhost:4000\";\r\n    const baseURL = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";\r\n        axios.post(`${baseURL}/api/v1/login`,{\r\n          email:values.email,\r\n          password:values.password\r\n        \r\n        }).then(res=>{\r\n        alert(\"succes\")\r\n      })\r\n      .catch(err=>{\r\n        alert(\"masla\")\r\n      })\r\n  }\r\n\r\n  const validationSchema = yup.object({\r\n    email: yup\r\n      .string('Enter your email')\r\n      .email('Enter a valid email')\r\n      .required('Email is required'),\r\n    password: yup\r\n      .string('Enter your password')\r\n      .min(8, 'Password should be of minimum 8 characters length')\r\n      .max(10, 'No more then 10')\r\n      .required('Password is required'),\r\n    // phone: yup\r\n    //   .string('Enter Your phone number')\r\n    //   .phone(\"please enter valid URL e.g: https://somewebsite.com\")\r\n    //   .required('phone number is required'),\r\n      name: yup\r\n      .string('Enter Your Full Name ')\r\n      // .url(\"please enter valid Name\")\r\n      .required('Full Namw is required'),\r\n  });\r\n\r\nfunction Signup(){\r\n\r\n \r\n    const formik = useFormik({\r\n        validationSchema : validationSchema,\r\n        initialValues:{\r\n            name: '',\r\n            email:'',\r\n            phone:'',\r\n            password:'',\r\n\r\n        },\r\n        onSubmit: onSubmitFunction\r\n    });\r\n    return(\r\n        <div>\r\n            <h1 className=\"text-center\">\r\n               Welcome To Todo List\r\n            </h1>\r\n\r\n    <div className=\"form d-flex justify-content-center p-5\">\r\n            <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <center><h3> SignUp Form</h3></center>\r\n        </div>\r\n        <Formik>\r\n        <form onSubmit={formik.handleSubmit} id=\"loginForm\" className=\"card-body px-5 py-4\">\r\n\r\n<TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Full Name\"\r\n            variant=\"outlined\"\r\n            name=\"name\"\r\n            value={formik.values.name}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.name && Boolean(formik.errors.name)}\r\n            helperText={formik.touched.name && formik.errors.name}\r\n          />\r\n\r\n\r\n\r\n<TextField\r\n            fullWidth\r\n            // color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n          \r\n<TextField \r\n           fullWidth\r\n           id=\"outlined-basic\"\r\n           label=\"Phone\"\r\n           variant=\"outlined\"\r\n           name=\"phone\" />\r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n          />\r\n          \r\n              <center><Link to=\"/\"><button className=\"btn btn-primary\">  Login </button></Link> \r\n            <button type=\"submit\" onClick={onSubmitFunction}  className=\"btn btn-secondary\">Sign Up</button>\r\n          </center> \r\n          \r\n        </form>\r\n        </Formik>\r\n    \r\n      </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React from 'react'\r\nimport { Formik, Field, Form, useFormik } from \"formik\";\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport * as yup from 'yup';\r\nimport './Form.css'\r\nimport { BrowserRouter as \r\n  Router,\r\n  Route,\r\n  Switch,\r\n  Link\r\n\r\n} from 'react-router-dom';\r\n\r\nfunction onSubmitFunction(values) {\r\n    console.log(\"values: \", values)\r\n  }\r\n\r\n  const validationSchema = yup.object({\r\n    email: yup\r\n      .string('Enter your email')\r\n      .email('Enter a valid email')\r\n      .required('Email is required'),\r\n    password: yup\r\n      .string('Enter your password')\r\n      .min(8, 'Password should be of minimum 8 characters length')\r\n      .max(10, 'No more then 10')\r\n      .required('Password is required'),\r\n    // phone: yup\r\n    //   .string('Enter Your phone number')\r\n    //   .phone(\"please enter valid URL e.g: https://somewebsite.com\")\r\n    //   .required('phone number is required'),\r\n      name: yup\r\n      .string('Enter Your Full Name ')\r\n      .url(\"please enter valid Name\")\r\n      .required('Full Namw is required'),\r\n  });\r\n\r\n\r\nfunction LoginForm(){\r\n\r\n  \r\n    const formik = useFormik({\r\n        validationSchema : validationSchema,\r\n        initialValues:{\r\n            name: '',\r\n            email:'',\r\n            phone:'',\r\n            password:'',\r\n\r\n        },\r\n        onSubmit: onSubmitFunction\r\n    });\r\n    return(\r\n        <div>\r\n            <h1 className=\"text-center\">\r\n                Welcome to Todo List\r\n            </h1>\r\n\r\n    <div className=\"form d-flex justify-content-center p-5\">\r\n            <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <center><h3>Login Form</h3></center>\r\n        </div>\r\n        <Formik>\r\n        <form onSubmit={formik.handleSubmit} id=\"loginForm\" className=\"card-body px-5 py-4\">\r\n          \r\n\r\n\r\n\r\n<TextField\r\n            fullWidth\r\n            // color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n          \r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n          />\r\n          \r\n              <center><button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n              <Link to=\"/signup\"> <button className=\"btn btn-secondary\"> Sign Up</button></Link>\r\n          </center> \r\n          \r\n        </form>\r\n        </Formik> \r\n    \r\n      </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","\r\n\r\nexport default function Nonpath(){\r\n    return(\r\n        <div>\r\n            <h1>404 Error</h1>\r\n        </div>\r\n    )\r\n}","\r\nimport { initializeApp } from \"firebase/app\"\r\nimport { getFirestore  } from \"firebase/firestore\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDGk9TaZ5OFtpemnturtP01oniU_gijVR8\",\r\n  authDomain: \"zubair-react-todo.firebaseapp.com\",\r\n  projectId: \"zubair-react-todo\",\r\n  storageBucket: \"zubair-react-todo.appspot.com\",\r\n  messagingSenderId: \"224237301888\",\r\n  appId: \"1:224237301888:web:90b5033bf69c89dc107665\",\r\n  measurementId: \"G-CHNYKL0W71\"\r\n};\r\n\r\n// Initialize Firebase\r\n initializeApp(firebaseConfig);\r\n export const db = getFirestore();\r\n","\r\nimport React from \"react\";\r\nimport \"./todo.css\";\r\nimport { TextField , Button} from \"@mui/material\";\r\nimport { collection, addDoc, getDocs } from \"firebase/firestore\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { db } from './../firebase'\r\nconst userCol = collection(db, \"todo\")\r\n\r\nconsole.log(userCol);\r\nfunction Todo({ todo, index, completeTodo ,removeTodo }) {\r\n    return (\r\n      <div\r\n        className=\"todo\"\r\n        style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}\r\n      >\r\n        {todo.text}\r\n        <div>\r\n          <Button variant=\"success\" onClick={() => completeTodo(index)}>Complete</Button>\r\n          <Button onClick={() => removeTodo(index)} variant=\"contained\"  color=\"error\">Delet</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\nfunction TodoForm({ addTodo }) {\r\n    const [value, setValue] = React.useState(\"\");\r\n  \r\n    const handleSubmit = e => {\r\n      e.preventDefault();\r\n      if (!value) return;\r\n      addTodo(value);\r\n      setValue(\"\");\r\n    };\r\n  \r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n              <TextField\r\n            fullWidth\r\n            addTodo={addTodo}\r\n            color=\"primary\"\r\n            id=\"standard-basic\" label=\"Standard\" variant=\"standard\" \r\n            type=\"text\"\r\n            name=\"text\"\r\n            className=\"input\"\r\n            value={value}\r\n          onChange={e => setValue(e.target.value)}\r\n          />\r\n      </form>\r\n    );\r\n  }\r\n\r\nfunction MainTodo() {\r\n    const [todos, setTodos] = React.useState([\r\n        {\r\n          text: \"Learn about React\",\r\n          isCompleted: false\r\n        },\r\n        {\r\n          text: \"Meet friend for lunch\",\r\n          isCompleted: false\r\n        },\r\n        {\r\n          text: \"Build really cool todo app\",\r\n          isCompleted: false\r\n        }\r\n      ]);\r\n      useEffect(() => {\r\n          const getData = async () =>{\r\n              const querySnapshot = await getDocs(userCol);\r\n              let todo = []\r\n              querySnapshot.forEach((doc) =>{\r\n                  console.log(`${doc.id} => ${doc.data()}`);\r\n                  todo.push(doc.data())\r\n              });\r\n              setTodos(todo)\r\n          }\r\n          getData()\r\n          return () => {\r\n             console.log(\"cleanup\")\r\n          };\r\n      }, [])\r\n  const addTodo = text => {\r\n    const newTodos = [...todos, { text }];\r\n    setTodos(newTodos);\r\n  };\r\n\r\n\r\n  const completeTodo = index => {\r\n    const newTodos = [...todos];\r\n    newTodos[index].isCompleted = true;\r\n    setTodos(newTodos);\r\n  };\r\n  const removeTodo = index => {\r\n    const newTodos = [...todos];\r\n    newTodos.splice(index, 1);\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"card\">\r\n     <div className=\"name\">\r\n    <h1>login as zubair</h1>\r\n     </div>\r\n\r\n        {todos.map((todo, index) => (\r\n          <Todo\r\n            key={index}\r\n            index={index}\r\n            todo={todo}\r\n            completeTodo={completeTodo}\r\n            removeTodo={removeTodo}\r\n          />\r\n        ))}\r\n        <TodoForm addTodo={addTodo} />\r\n          \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainTodo;","import './App.css';\nimport Signup from './signup/Form';\nimport LoginForm from './login/Form';\nimport Nonpath from './404';\nimport MainTodo from './todo/todoApp';\nimport { BrowserRouter as \n         Router,\n         Switch,\n         Route,\n         Link\n\n} from 'react-router-dom';\n\n\n\n\n\nfunction App(){\n  return(\n    \n    <div>\n    <Router>\n      <Switch>\n      <Route  path='/todo'>\n        <MainTodo />\n        </Route>\n        <Route  path='/signup'>\n        <Signup />\n        </Route>\n        <Route exact path='/'>\n        <LoginForm />\n        </Route>\n        <Route  component={404}>\n        <Nonpath />\n        </Route>\n      </Switch>\n    \n    </Router>\n      \n    </div>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}