{"version":3,"sources":["context/Context.jsx","components/signup/Form.jsx","components/login/Form.jsx","components/404.jsx","firebase.js","components/todo/todoApp.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["GlobalContext","createContext","validationSchema","yup","email","required","password","min","max","name","Signup","history","useHistory","baseURL","window","location","hostname","split","formik","useFormik","initialValues","fullName","phone","onSubmit","values","axios","post","Number","then","result","data","push","catch","err","console","log","className","handleSubmit","id","TextField","fullWidth","color","label","variant","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","to","url","LoginForm","dispatch","useContext","payload","gender","phoneNumber","address","Nonpath","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","userCol","collection","Todo","todo","index","completeTodo","removeTodo","style","textDecoration","isCompleted","text","Button","onClick","TodoForm","addTodo","React","useState","setValue","e","preventDefault","target","MainTodo","todos","setTodos","useEffect","a","getDocs","querySnapshot","forEach","doc","getData","newTodos","splice","map","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4376995c.chunk.js","sourcesContent":["import React, {Children, createContext , useReducer} from 'react'\r\nimport { reducer } from './Reducer';\r\nexport const GlobalContext = createContext(\"initial values\");\r\nlet data = {\r\n    user: {},\r\n};\r\n\r\nexport default function ContextProvider({children}) {\r\n    const [state , dispatch] = useReducer(reducer , data)\r\n\r\n    return(\r\n        <GlobalContext.Provider value={{state, dispatch}}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport { Formik, Field, Form, useFormik } from \"formik\";\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport * as yup from 'yup';\r\nimport './Form.css'\r\nimport axios from 'axios';\r\nimport { GlobalContext } from \"../../context/Context\";\r\nimport { useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { BrowserRouter  as\r\n  Router,\r\n  Route,\r\n  Switch,\r\n  Link \r\n} from 'react-router-dom';\r\n\r\n  const validationSchema = yup.object({\r\n    email: yup\r\n      .string('Enter your email')\r\n      .email('Enter a valid email')\r\n      .required('Email is required'),\r\n    password: yup\r\n      .string('Enter your password')\r\n      .min(8, 'Password should be of minimum 8 characters length')\r\n      .max(10, 'No more then 10')\r\n      .required('Password is required'),\r\n    // phone: yup\r\n    //   .string('Enter Your phone number')\r\n    //   .phone(\"please enter valid URL e.g: https://somewebsite.com\")\r\n    //   .required('phone number is required'),\r\n      name: yup\r\n      .string('Enter Your Full Name ')\r\n      // .url(\"please enter valid Name\")\r\n      .required('Full Name is required'),\r\n  });\r\n\r\nfunction Signup(){\r\n\r\n  const history = useHistory();\r\n  const dev = \"http://localhost:4000\";\r\n  const baseURL = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\"; \r\n  \r\n    const formik = useFormik({\r\n  \r\n        initialValues:{\r\n            fullName: '',\r\n            email:'',\r\n            phone:'',\r\n            password:'',\r\n\r\n        },\r\n        validationSchema : validationSchema,\r\n        onSubmit: (values) => {\r\n    \r\n          axios.post(`${baseURL}/api/v1/add_user`,{\r\n            fullName: values.fullName,\r\n            phone: Number(values.phone),\r\n            email:values.email,\r\n            password:values.password\r\n          \r\n          }).then((result) => {\r\n            if (result.data === \"user created\") {\r\n              //message\r\n              history.push(\"/login\");\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n        }\r\n    });\r\n    return(\r\n        <div>\r\n            <h1 className=\"text-center\">\r\n               Welcome To Todo List\r\n            </h1>\r\n\r\n    <div className=\"form d-flex justify-content-center p-5\">\r\n            <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <center><h3> SignUp Form</h3></center>\r\n        </div>\r\n        <Formik>\r\n        <form onSubmit={formik.handleSubmit} id=\"loginForm\" className=\"card-body px-5 py-4\">\r\n\r\n<TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Full Name\"\r\n            variant=\"outlined\"\r\n            name=\"fullName\"\r\n            value={formik.values.fullName}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.fullName && Boolean(formik.errors.fullName)}\r\n            helperText={formik.touched.fullName && formik.errors.fullName}\r\n          />\r\n\r\n\r\n\r\n<TextField\r\n            fullWidth\r\n            // color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n          \r\n<TextField \r\n           fullWidth\r\n           id=\"outlined-basic\"\r\n           label=\"Phone\"\r\n           variant=\"outlined\"\r\n           name=\"phone\" />\r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n          />\r\n          \r\n              <center><Link to=\"/\"><button className=\"btn btn-primary\">  I have an account </button></Link> \r\n            <button type=\"submit\"  className=\"btn btn-secondary\">Signup</button>\r\n          </center> \r\n          \r\n        </form>\r\n        </Formik>\r\n    \r\n      </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React from 'react'\r\nimport { Formik, Field, Form, useFormik } from \"formik\";\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport * as yup from 'yup';\r\nimport './Form.css'\r\nimport axios from 'axios'\r\nimport { GlobalContext } from \"../../context/Context\";\r\nimport { useContext } from \"react\";\r\nimport { BrowserRouter as \r\n  Router,\r\n  Route,\r\n  Switch,\r\n  Link\r\n\r\n} from 'react-router-dom';\r\n\r\n\r\n\r\n  const validationSchema = yup.object({\r\n    email: yup\r\n      .string('Enter your email')\r\n      .email('Enter a valid email')\r\n      .required('Email is required'),\r\n    password: yup\r\n      .string('Enter your password')\r\n      .min(8, 'Password should be of minimum 8 characters length')\r\n      .max(10, 'No more then 10')\r\n      .required('Password is required'),\r\n    // phone: yup\r\n    //   .string('Enter Your phone number')\r\n    //   .phone(\"please enter valid URL e.g: https://somewebsite.com\")\r\n    //   .required('phone number is required'),\r\n      name: yup\r\n      .string('Enter Your Full Name ')\r\n      .url(\"please enter valid Name\")\r\n      .required('Full Namw is required'),\r\n  });\r\n\r\n\r\nfunction LoginForm(){\r\n  let { dispatch } = useContext(GlobalContext);\r\n  const dev = \"http://localhost:4000\";\r\n  const baseURL =\r\n    window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";\r\n  \r\n    const formik = useFormik({\r\n        initialValues:{\r\n            \r\n            email:'',\r\n        \r\n            password:'',\r\n\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n          axios\r\n            .post(`${baseURL}/api/v1/login`, {\r\n              email: values.email,\r\n              password: values.password,\r\n            })\r\n            .then((result) => {\r\n              if (result.data !== \"error\") {\r\n                dispatch({\r\n                  type: \"USER_LOGIN\",\r\n                  payload: {\r\n                    fullName: result.data.fullName,\r\n                    email: result.data.email,\r\n                    gender: result.data.gender,\r\n                    phoneNumber: result.data.phoneNumber,\r\n                    address: result.data.address,\r\n                  },\r\n                });\r\n                //message\r\n                console.log(\"successful login\");\r\n              } else {\r\n                 console.log(\"Email or password is invalid\");\r\n               \r\n              }\r\n            });\r\n        },\r\n    });\r\n    return(\r\n        <div>\r\n            <h1 className=\"text-center\">\r\n                Welcome to Todo List\r\n            </h1>\r\n\r\n    <div className=\"form d-flex justify-content-center p-5\">\r\n            <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <center><h3>Login Form</h3></center>\r\n        </div>\r\n        <Formik>\r\n        <form onSubmit={formik.handleSubmit} id=\"loginForm\" className=\"card-body px-5 py-4\">\r\n          \r\n\r\n\r\n\r\n<TextField\r\n            fullWidth\r\n            // color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n          \r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n          />\r\n          \r\n              <center><button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n              <Link to=\"/signup\"> <button className=\"btn btn-secondary\"> Create an Account</button></Link>\r\n          </center> \r\n          \r\n        </form>\r\n        </Formik> \r\n    \r\n      </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","\r\n\r\nexport default function Nonpath(){\r\n    return(\r\n        <div>\r\n            <h1>404 Error</h1>\r\n        </div>\r\n    )\r\n}","\r\nimport { initializeApp } from \"firebase/app\"\r\nimport { getFirestore  } from \"firebase/firestore\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDGk9TaZ5OFtpemnturtP01oniU_gijVR8\",\r\n  authDomain: \"zubair-react-todo.firebaseapp.com\",\r\n  projectId: \"zubair-react-todo\",\r\n  storageBucket: \"zubair-react-todo.appspot.com\",\r\n  messagingSenderId: \"224237301888\",\r\n  appId: \"1:224237301888:web:90b5033bf69c89dc107665\",\r\n  measurementId: \"G-CHNYKL0W71\"\r\n};\r\n\r\n// Initialize Firebase\r\n initializeApp(firebaseConfig);\r\n export const db = getFirestore();\r\n","\r\nimport React from \"react\";\r\nimport \"./todo.css\";\r\nimport { TextField , Button} from \"@mui/material\";\r\nimport { collection, addDoc, getDocs } from \"firebase/firestore\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { db } from '../../firebase'\r\nconst userCol = collection(db, \"todo\")\r\n\r\nconsole.log(userCol);\r\nfunction Todo({ todo, index, completeTodo ,removeTodo }) {\r\n    return (\r\n      <div\r\n        className=\"todo\"\r\n        style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}\r\n      >\r\n        {todo.text}\r\n        <div>\r\n          <Button variant=\"success\" onClick={() => completeTodo(index)}>Complete</Button>\r\n          <Button onClick={() => removeTodo(index)} variant=\"contained\"  color=\"error\">Delet</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\nfunction TodoForm({ addTodo }) {\r\n    const [value, setValue] = React.useState(\"\");\r\n  \r\n    const handleSubmit = e => {\r\n      e.preventDefault();\r\n      if (!value) return;\r\n      addTodo(value);\r\n      setValue(\"\");\r\n    };\r\n  \r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n              <TextField\r\n            fullWidth\r\n            addTodo={addTodo}\r\n            color=\"primary\"\r\n            id=\"standard-basic\" label=\"Standard\" variant=\"standard\" \r\n            type=\"text\"\r\n            name=\"text\"\r\n            className=\"input\"\r\n            value={value}\r\n          onChange={e => setValue(e.target.value)}\r\n          />\r\n      </form>\r\n    );\r\n  }\r\n\r\nfunction MainTodo() {\r\n    const [todos, setTodos] = React.useState([\r\n        {\r\n          text: \"Learn about React\",\r\n          isCompleted: false\r\n        },\r\n        {\r\n          text: \"Meet friend for lunch\",\r\n          isCompleted: false\r\n        },\r\n        {\r\n          text: \"Build really cool todo app\",\r\n          isCompleted: false\r\n        }\r\n      ]);\r\n      useEffect(() => {\r\n          const getData = async () =>{\r\n              const querySnapshot = await getDocs(userCol);\r\n              let todo = []\r\n              querySnapshot.forEach((doc) =>{\r\n                  console.log(`${doc.id} => ${doc.data()}`);\r\n                  todo.push(doc.data())\r\n              });\r\n              setTodos(todo)\r\n          }\r\n          getData()\r\n          return () => {\r\n             console.log(\"cleanup\")\r\n          };\r\n      }, [])\r\n  const addTodo = text => {\r\n    const newTodos = [...todos, { text }];\r\n    setTodos(newTodos);\r\n  };\r\n\r\n\r\n  const completeTodo = index => {\r\n    const newTodos = [...todos];\r\n    newTodos[index].isCompleted = true;\r\n    setTodos(newTodos);\r\n  };\r\n  const removeTodo = index => {\r\n    const newTodos = [...todos];\r\n    newTodos.splice(index, 1);\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"card\">\r\n     <div className=\"name\">\r\n    <h1>login as zubair</h1>\r\n     </div>\r\n\r\n        {todos.map((todo, index) => (\r\n          <Todo\r\n            key={index}\r\n            index={index}\r\n            todo={todo}\r\n            completeTodo={completeTodo}\r\n            removeTodo={removeTodo}\r\n          />\r\n        ))}\r\n        <TodoForm addTodo={addTodo} />\r\n          \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainTodo;","import './App.css';\nimport Signup from './components/signup/Form';\nimport LoginForm from './components/login/Form';\nimport Nonpath from './components/404';\nimport MainTodo from './components/todo/todoApp';\nimport { BrowserRouter as \n         Router,\n         Switch,\n         Route,\n         Link\n\n} from 'react-router-dom';\n\n\n\n\n\nfunction App(){\n  return(\n    \n    <div>\n    <Router>\n      <Switch>\n      <Route  path='/todo'>\n        <MainTodo />\n        </Route>\n        <Route  path='/signup'>\n        <Signup />\n        </Route>\n        <Route exact path='/'>\n        <LoginForm />\n        </Route>\n        <Route  component={404}>\n        <Nonpath />\n        </Route>\n      </Switch>\n    \n    </Router>\n      \n    </div>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}